name: Deploy Portfolio

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to DigitalOcean
        env:
          ENV_FILE_CONTENT: ${{ secrets.ENV_FILE }}
          ENV_FRONTEND_CONTENT: ${{ secrets.ENV_FRONTEND_FILE }}
        run: |
          # 1) ensure repo exists & pull latest
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'bash -s' <<'REMOTE'
            set -euxo pipefail
            PROJECT_DIR=/var/www/html/portfolio
            BRANCH=master
            mkdir -p "$PROJECT_DIR"
            cd "$PROJECT_DIR"
            if [ -d .git ]; then
              git fetch origin $BRANCH
              git reset --hard origin/$BRANCH
            else
              git clone -b $BRANCH git@github.com:kayzinkhaing/portfolio-cqrs-clean-architecture.git .
            fi
          REMOTE

          # 2) upload Laravel .env (preserve multiline exactly; remove CRLF)
          printf '%s' "$ENV_FILE_CONTENT" | ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'sed "s/\r$//" > /var/www/html/portfolio/auth-system/.env && chmod 600 /var/www/html/portfolio/auth-system/.env'

          # 3) upload Frontend .env
          printf '%s' "$ENV_FRONTEND_CONTENT" | ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'sed "s/\r$//" > /var/www/html/portfolio/vue-auth-system/.env && chmod 600 /var/www/html/portfolio/vue-auth-system/.env'

          # 4) run docker-compose and artisan commands remotely
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'bash -s' <<'REMOTE'
            set -euxo pipefail
            cd /var/www/html/portfolio

            docker compose -f docker-stack/docker-compose.yml down || true
            docker compose -f docker-stack/docker-compose.yml -p portfolio up -d --build --remove-orphans

            # wait until laravel container responds to artisan status
            until docker compose exec -T laravel php artisan migrate:status >/dev/null 2>&1; do
              echo "Laravel not ready yet; sleeping 5s..."
              sleep 5
            done

            docker compose exec -T laravel php artisan migrate --force
            docker compose exec -T laravel php artisan storage:link || true
            docker compose exec -T laravel php artisan config:clear
            docker compose exec -T laravel php artisan cache:clear
            docker compose exec -T laravel php artisan route:clear
            docker compose exec -T laravel php artisan view:clear

            sudo nginx -s reload || true
          REMOTE
