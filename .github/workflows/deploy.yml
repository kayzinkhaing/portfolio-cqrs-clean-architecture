name: Deploy Portfolio

on:
  push:
    branches:
      - master   # Change if your main branch is different

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Setup SSH agent
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 3️⃣ Add server to known_hosts
      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # 4️⃣ Deploy via SSH
      - name: Deploy to DigitalOcean
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "bash -s" << REMOTE_EOF
            set -euxo pipefail

            # Pass secrets inside SSH session
            ENV_FILE_B64='${{ secrets.ENV_FILE }}'
            ENV_FRONTEND_FILE_B64='${{ secrets.ENV_FRONTEND_FILE }}'

            PROJECT_DIR=/var/www/html/portfolio
            LARAVEL_DIR="\$PROJECT_DIR/auth-system"
            FRONTEND_DIR="\$PROJECT_DIR/vue-auth-system"
            BRANCH=master

            mkdir -p "\$LARAVEL_DIR" "\$FRONTEND_DIR"
            cd "\$PROJECT_DIR" || { echo "Failed to cd \$PROJECT_DIR"; exit 1; }

            if [ -d .git ]; then
              echo "Pulling latest code..."
              git fetch origin \$BRANCH
              git reset --hard origin/\$BRANCH
            else
              echo "Cloning repository..."
              git clone -b \$BRANCH git@github.com:kayzinkhaing/portfolio-cqrs-clean-architecture.git .
            fi

            echo "\$ENV_FILE_B64" | base64 -d > "\$LARAVEL_DIR/.env"
            echo "\$ENV_FRONTEND_FILE_B64" | base64 -d > "\$FRONTEND_DIR/.env"
            chmod 600 "\$LARAVEL_DIR/.env" "\$FRONTEND_DIR/.env"

            docker compose -f docker-stack/docker-compose.yml down -v --remove-orphans || true
            docker compose -f docker-stack/docker-compose.yml up -d --build

            until docker compose exec -T laravel php artisan migrate:status >/dev/null 2>&1; do
              echo "Laravel not ready yet, sleeping 5 seconds..."
              sleep 5
            done

            docker compose exec -T laravel php artisan migrate --force
            docker compose exec -T laravel php artisan storage:link || true
            docker compose exec -T laravel php artisan config:clear
            docker compose exec -T laravel php artisan cache:clear
            docker compose exec -T laravel php artisan route:clear
            docker compose exec -T laravel php artisan view:clear

            sudo nginx -s reload || true
            echo "✅ Deployment completed successfully!"
          REMOTE_EOF
