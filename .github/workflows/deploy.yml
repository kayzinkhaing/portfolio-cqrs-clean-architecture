name: Deploy Portfolio

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        env:
          ENV_FILE: ${{ secrets.ENV_FILE }}
          ENV_FRONTEND_FILE: ${{ secrets.ENV_FRONTEND_FILE }}
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "bash -s" << 'REMOTE_EOF'
            set -euxo pipefail

            PROJECT_DIR=/var/www/html/portfolio
            LARAVEL_DIR=\$PROJECT_DIR/auth-system
            FRONTEND_DIR=\$PROJECT_DIR/vue-auth-system
            BRANCH=master

            mkdir -p "\$LARAVEL_DIR" "\$FRONTEND_DIR"
            cd "\$PROJECT_DIR"

            if [ -d .git ]; then
              git fetch origin \$BRANCH
              git reset --hard origin/\$BRANCH
            else
              git clone -b \$BRANCH git@github.com:kayzinkhaing/portfolio-cqrs-clean-architecture.git .
            fi

            # ⚠️ Use environment variable expansion via SSH
            echo "$ENV_FILE" | base64 -d > "\$LARAVEL_DIR/.env"
            echo "$ENV_FRONTEND_FILE" | base64 -d > "\$FRONTEND_DIR/.env"
            chmod 600 "\$LARAVEL_DIR/.env" "\$FRONTEND_DIR/.env"

            docker compose -f docker-stack/docker-compose.yml down --remove-orphans || true
            docker compose -f docker-stack/docker-compose.yml up -d --build

            until docker compose exec -T laravel php artisan migrate:status >/dev/null 2>&1; do
              echo "Laravel not ready yet, sleeping 5 seconds..."
              sleep 5
            done

            docker compose exec -T laravel php artisan migrate --force
            docker compose exec -T laravel php artisan storage:link || true
            docker compose exec -T laravel php artisan config:clear
            docker compose exec -T laravel php artisan cache:clear
            docker compose exec -T laravel php artisan route:clear
            docker compose exec -T laravel php artisan view:clear

            sudo nginx -s reload || true
            echo "✅ Deployment completed successfully!"
          REMOTE_EOF
